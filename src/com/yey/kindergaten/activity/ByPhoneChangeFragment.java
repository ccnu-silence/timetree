package com.yey.kindergaten.activity;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.text.InputFilter;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.view.inputmethod.InputMethodManager;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import android.widget.Toast;import com.lidroid.xutils.exception.DbException;import com.yey.kindergaten.AppContext;import com.yey.kindergaten.MainActivity;import com.yey.kindergaten.R;import com.yey.kindergaten.bean.AccountInfo;import com.yey.kindergaten.db.DbHelper;import com.yey.kindergaten.fragment.FragmentBase;import com.yey.kindergaten.net.AppServer;import com.yey.kindergaten.net.OnAppRequestListener;import com.yey.kindergaten.service.ContactsService;import com.yey.kindergaten.service.HuanxinService;import com.yey.kindergaten.util.AppConstants;import com.yey.kindergaten.util.SharedPreferencesHelper;import java.util.Timer;import java.util.TimerTask;public class ByPhoneChangeFragment extends FragmentBase implements OnClickListener{	private	Button btn_next;	private EditText phoneet;    private TextView warn_tv;    private Button show_hide;	static int time =0;    private  String type =null;    private  String phonenumber = null;    private  String code = null;    private  int role;    private AccountInfo mAccountInfo;    private String TAG = "ByPhoneChangeFragment";    private boolean isshow=false;    @Override	public void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);	}	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		View view=inflater.inflate(R.layout.byphonechange,container, false);			btn_next=(Button) view.findViewById(R.id.btn_bindphonefragment_bind);        btn_next.setOnClickListener(this);		phoneet=(EditText) view.findViewById(R.id.edt_bindphonefragment_phone);        warn_tv = (TextView) view.findViewById(R.id.text_suggest);        phoneet.setFilters(new InputFilter[]{new InputFilter.LengthFilter(11)});        show_hide = (Button) view.findViewById(R.id.show_hide_login_btn);        Bundle bundle = this.getArguments();        mAccountInfo = AppServer.getInstance().getAccountInfo();        type = bundle.getString("type");        if(type!=null){          phonenumber = bundle.getString("phonenumber");          code = bundle.getString("code");          role = bundle.getInt("role",0);          phoneet.setHint("6~12位密码");          warn_tv.setVisibility(View.VISIBLE);          btn_next.setText("完成注册");//            show_hide.setOnClickListener(new OnClickListener() {//                @SuppressWarnings("deprecation")//                @Override//                public void onClick(View arg0) {//                    if(isshow){//                        phoneet.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);//                        phoneet.setSelection(show_hide.getText().length());//                        isshow=false;////                        show_hide.setBackgroundDrawable(ByPhoneChangeFragment.this.getResources().//                                getDrawable(R.drawable.check_phone_hover));////                    }else{//                        phoneet.setInputType(InputType.TYPE_TEXT_VARIATION_VISIBLE_PASSWORD);//显示密码//                        phoneet.setSelection(show_hide.getText().length());//                        isshow=true;////                        show_hide.setBackgroundDrawable(ByPhoneChangeFragment.this.getResources().//                                getDrawable(R.drawable.check_phone_code));//                    }//                }//            });            phoneet.setFilters(new InputFilter[]{new InputFilter.LengthFilter(12)});            phoneet.setFocusable(true);            phoneet.setFocusableInTouchMode(true);            phoneet.requestFocus();            Timer timers = new Timer();            timers.schedule(new TimerTask() {                public void run() {                    InputMethodManager inputManager = (InputMethodManager) phoneet.getContext().getSystemService(Context.INPUT_METHOD_SERVICE);                    inputManager.showSoftInput(phoneet, 0);                }            }, 500);        }		return view;	}	@Override	public void onClick(View v) {		final String phonenum=phoneet.getText().toString();		switch (v.getId()) {            case R.id.btn_bindphonefragment_bind:                if (phonenum == null || phonenum.length() == 0) {                    ShowToast("手机号码不能为空");                    return;                }                if (phonenum.length() > 20) {                    ShowToast("密码长度过长，请您重新设置");                    return;                }                if(phonenum.length()<6){                    ShowToast("密码长度过短，请您重新设置");                    return;                }                if (type==null) {                    showLoadingDialog("正在验证，请稍后...");                    AppServer.getInstance().checkPhone(phonenum, new OnAppRequestListener() {                        @Override                        public void onAppRequest(int code, String message, Object obj) {                            if (code == AppServer.REQUEST_SUCCESS) {                                cancelLoadingDialog();                                Intent i = new Intent(getActivity(), SetPasswordActivity.class);                                i.putExtra("phone", phonenum);                                startActivity(i);                            } else {                                cancelLoadingDialog();                                Toast.makeText(getActivity(), message + "", Toast.LENGTH_SHORT).show();                            }                        }                    });                    break;                }else{                    showLoadingDialog("注册中...");                    AppServer.getInstance().register(phonenumber, phonenum, role,code, new OnAppRequestListener() {                        @Override                        public void onAppRequest(int code, String message, Object obj) {                            if(code ==AppServer.REQUEST_SUCCESS){                                    mAccountInfo = (AccountInfo) obj;                                    mAccountInfo.setRole(role);                                    mAccountInfo.setAccount(phonenumber);                                    mAccountInfo.setPassword(phonenum);                                    mAccountInfo.setPhone(phonenumber);                                    try {                                        DbHelper.getDB(ByPhoneChangeFragment.this.getActivity()).save(mAccountInfo);                                    } catch (DbException e) {                                        e.printStackTrace();                                    }                                login(phonenumber,phonenum);                            }else{                                cancelLoadingDialog();                                ShowToast(message);                            }                        }                    });                }        }	}    //因为多线程异步的原因，要等到登陆线程的代码运行完在执行跳转。    public void login(final String accout, final String password){        String clientId = SharedPreferencesHelper.getInstance(ByPhoneChangeFragment.this.getActivity()).getString(AppConstants.CLIENTID, "");        final String isFirstLook = SharedPreferencesHelper.getInstance(ByPhoneChangeFragment.this.getActivity()).getString(mAccountInfo.getUid()+"$", "0$"+mAccountInfo.getUid());        AppServer.getInstance().login(ByPhoneChangeFragment.this.getActivity(), accout, password, clientId, new OnAppRequestListener() {            @Override            public void onAppRequest(int code, String message, Object obj) {                final AccountInfo info = AppServer.getInstance().getAccountInfo();                if(code == AppServer.REQUEST_SUCCESS){                    runOnUiThread(new Runnable() {                        @Override                        public void run() {                            //更新数据库                            DbHelper.updateDBUtils(AppContext.getInstance().getAccountInfo());                            int action =0;                            if(role == 0){                                if(isFirstLook.contains(AppConstants.SHAREPAFERENCE_IS_FIRST_LOGIN+info.getUid())){                                     Intent intent = new Intent(ByPhoneChangeFragment.this.getActivity(),WizardActivity.class);                                     intent.putExtra("type","fromLogin");                                     intent.putExtra("fromdId",AppConstants.TIMETREE_DO_DIRECTOR);                                     startActivity(intent);                                }else {                                    Intent a=new Intent(ByPhoneChangeFragment.this.getActivity(), MainActivity.class);                                    a.putExtra(AppConstants.SERVICECREATESTATE, AppConstants.CREATEKINDER);                                    startActivity(a);                                    action = AppConstants.HX_DIRECTOR_ACTION;                                }                            }else if(role == 1){                                if(isFirstLook.contains(AppConstants.SHAREPAFERENCE_IS_FIRST_LOGIN+info.getUid())){                                    Intent intent = new Intent(ByPhoneChangeFragment.this.getActivity(),WizardActivity.class);                                    intent.putExtra("type","fromLogin");                                    intent.putExtra("fromdId",AppConstants.TIMETREE_DO_TEACHER);                                    startActivity(intent);                                }else {                                    Intent a=new Intent(ByPhoneChangeFragment.this.getActivity(), MainActivity.class);                                    a.putExtra(AppConstants.SERVICECREATESTATE, AppConstants.CREATECLASS);                                    startActivity(a);                                    action = AppConstants.HX_TEACHER_NO_KID;}                            }                            Intent it = new Intent(ByPhoneChangeFragment.this.getActivity(), ContactsService.class);                            ByPhoneChangeFragment.this.getActivity().startService(it);                            Intent serviceIntent = new Intent(ByPhoneChangeFragment.this.getActivity(), HuanxinService.class);                            serviceIntent.putExtra(AppConstants.PARAM_UID,info.getUid());                            serviceIntent.putExtra("relation",0+"");                            serviceIntent.putExtra(AppConstants.PARAM_PASSWORD,info.getPassword());                            serviceIntent.putExtra("state",AppConstants.HUANXIN_REGEDIT);                            serviceIntent.putExtra("regedit","updateClient");                            serviceIntent.putExtra("action",action);                            ByPhoneChangeFragment.this.getActivity().startService(serviceIntent);                            cancelLoadingDialog();                            ByPhoneChangeFragment.this.getActivity().finish();                        }                    });                    //注释环信的注册                   /* new Thread(new Runnable() {                        public void run() {                            try {                                // 调用sdk注册方法                                EMChatManager.getInstance().createAccountOnServer(AppServer.getInstance().getAccountInfo().getUid()+"", password);                                runOnUiThread(new Runnable() {                                    public void run() {                                        //更新数据库                                        DbHelper.updateDBUtils(AppContext.getInstance().getAccountInfo());                                        if(role == 0){                                            Intent a=new Intent(CreateIdActivity.this, ServiceCreateKinderActivity.class);                                            a.putExtra(AppConstants.SERVICECREATESTATE, AppConstants.CREATEKINDER);                                            startActivity(a);                                            CreateIdActivity.this.finish();                                        }else if(role == 1){                                            Intent a=new Intent(CreateIdActivity.this, ServiceCreateKinderActivity.class);                                            a.putExtra(AppConstants.SERVICECREATESTATE, AppConstants.CREATECLASS);                                            startActivity(a);                                            CreateIdActivity.this.finish();                                        }                                        // 保存用户名                                        AppContext.getInstance().setUserName(accout);                                        finish();                                    }                                });                            } catch (final EaseMobException e) {                            }                        }                    }).start();*/                }else{                    ShowToast("创建失败");                }            }        });    }}